' Functions for image manipulation in Word
' See WordPicture.docm (which contains a copy of this) for instructions.
'
' Copyright (c) 2020 Charles Weir
'
'This program is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 3 of the License, or
'    (at your option) any later version.
'
'    This program is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.
'
'    You should have received a copy of the GNU General Public License
'    along with this program.  If not, see <https://www.gnu.org/licenses/>.

Attribute VB_Name = "FiguresAndTables"

Static Sub PreserveImageCroppingAndSizing(IsPaste)
' Support for updating an image to a new version while preserving cropping and sizing.
' Typically used, for example, with PDFs or jpegs generated by an external tool
'
' Called with IsPaste=False: Takes the selected inline image and copies its size and cropping
' Called with IsPaste=True: Applies the saved size and cropping to the selected image
'
    ' Call is static to preserve value of all variables:
    Dim cropLeft, cropRight, cropTop, cropBottom, pictureHeight, pictureWidth, ScaleHeight, ScaleWidth, Height, Width As Variant
    
    With Selection.InlineShapes(1)
        If Not IsPaste Then ' copy
            ScaleHeight = .ScaleHeight
            ScaleWidth = .ScaleWidth
            Height = .Height
            Width = .Width
            With .PictureFormat
                cropLeft = .cropLeft
                cropRight = .cropRight
                cropTop = .cropTop
                cropBottom = .cropBottom
                pictureHeight = .Crop.pictureHeight
                pictureWidth = .Crop.pictureWidth
            End With
        Else ' Paste
            With .PictureFormat
                .cropLeft = cropLeft
                .cropRight = cropRight
                .cropTop = cropTop
                .cropBottom = cropBottom
            End With
            .ScaleHeight = ScaleHeight
            .ScaleWidth = ScaleWidth
            .Height = Height
            .Width = Width
        End If
    End With
End Sub
Sub CopyImageFormat()
    ' For button or keyboard shortcut (suggest Ctrl-Sh-Cmd C).
    ' Copy the layout of the current image or shape
    
    PreserveImageCroppingAndSizing (False)
End Sub
Sub PasteImageFormat()
    ' For button or keyboard shortcut (suggest Ctrl-Sh-Cmd V).
    ' Paste the layout of the current image or shape
    
    PreserveImageCroppingAndSizing (True)
End Sub

Sub RepositionFloatingImage()
'  Processing for a Picture reposition button.
' Note, doesn't work well as keyboard shortcut, since with keystroke multiple invocations don't seem to work.
'
' Implements support for Latex-like floating pictures near their anchor point.
'
' Specifically, either resets the positioning of the selected floating image or text frame:
'   In two column mode:
'       to be top or bottom of its column or page
'       (first to top, then when called again, to bottom etc)
'   In single column mode:
'      If large, float top or bottom of the page
'      If small, float Left or right, near the anchor
'

    Dim myShape As Shape
    Dim AnchorParagraph As Paragraph
      
    If Selection.ShapeRange.Count > 0 Then
        Set myShape = Selection.ShapeRange(1)
    Else
        MsgBox "Please select a floating image, shape or textbox first."
        Exit Sub
    End If

    With myShape
        If Selection.Sections(1).PageSetup.TextColumns.Count > 1 Then
            ' Column layout. In column if small enough, else page. Toggle top/bottom
            MaxSingleColumnImageWidth = Selection.Sections(1).PageSetup.TextColumns.Width + Selection.Sections(1).PageSetup.TextColumns.Spacing
            .WrapFormat.Type = wdWrapTopBottom
            If .Width > MaxSingleColumnImageWidth Then
                .RelativeHorizontalPosition = wdRelativeHorizontalPositionMargin
            Else
                .RelativeHorizontalPosition = wdRelativeHorizontalPositionColumn
            End If
            .RelativeVerticalPosition = wdRelativeVerticalPositionMargin
            .Left = wdShapeCenter
            If .Top = wdShapeTop Then
                .Top = wdShapeBottom
            Else
                .Top = wdShapeTop
            End If
        Else
            ' One column.
            HalfPageWidth = Selection.Sections(1).PageSetup.TextColumns.Width / 2
            If .Width < HalfPageWidth Then
                'Small picture. Put near anchor, wrap around. Toggle left/right
                .WrapFormat.Type = wdWrapSquare
                .RelativeVerticalPosition = wdRelativeVerticalPositionLine
                .Top = wdShapeTop  'Or wdShapeCenter, but that looked a bit odd.
                
                .RelativeHorizontalPosition = wdRelativeHorizontalPositionColumn
                If .Left = wdShapeRight Then
                    .Left = wdShapeLeft
                Else
                    .Left = wdShapeRight
                End If
            Else
                ' Big picture: Toggle top/bottom of page
                .WrapFormat.Type = wdWrapTopBottom
                .RelativeVerticalPosition = wdRelativeVerticalPositionMargin
                .RelativeHorizontalPosition = wdRelativeHorizontalPositionColumn
                .Left = wdShapeCenter
                If .Top = wdShapeTop Then
                    .Top = wdShapeBottom
                Else
                    .Top = wdShapeTop
                End If
            End If
        End If
            
    End With

End Sub

